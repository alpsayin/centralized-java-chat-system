package serverSide;

/*
 * ServerFrame.java
 *
 * Created on 22 Aralık 2007 Cumartesi, 02:11
 */

import javax.swing.JOptionPane;
import javax.swing.JDialog;

/**
 *
 * @author  Alp
 */
public class ServerFrame extends javax.swing.JFrame implements MessageSender
{
    
    /** Creates new form ServerFrame */
    private SettingsFrame settingsFrame;
    private ConsolePanel target;
    public ServerFrame() throws Exception
    {
        this.setLocation(150, 150);
        target = new ConsolePanel(this);
        setLocalhostName(target.getLocalhostName());
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        Server = new javax.swing.JMenu();
        start = new javax.swing.JMenuItem();
        stop = new javax.swing.JMenuItem();
        clients = new javax.swing.JMenuItem();
        quitMenu = new javax.swing.JMenuItem();
        sendM = new javax.swing.JMenu();
        to1 = new javax.swing.JMenuItem();
        toA = new javax.swing.JMenuItem();
        settings = new javax.swing.JMenu();
        change = new javax.swing.JMenuItem();
        reset = new javax.swing.JMenuItem();
        about = new javax.swing.JMenu();
        help = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        threadS = new javax.swing.JMenuItem();
        aboutDialog = new javax.swing.JMenuItem();

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/serverSide/alp.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Courier New", 0, 14));
        jLabel1.setText("FreeChat! v1.0");

        jLabel2.setText("Alp Sayın");

        jLabel3.setText("alp_sayin@ieee.org");

        jLabel4.setText("anything else?");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel6.setText(getLocalhostName());

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addContainerGap(32, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(83, 83, 83))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FreeChat!");
        setMinimumSize(new java.awt.Dimension(900, 550));
        setResizable(false);

        jPanel1.add(target);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 742, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 462, Short.MAX_VALUE)
        );

        Server.setText("Server");
        Server.setToolTipText("start, stop, getinfo...");
        Server.setFont(new java.awt.Font("Tahoma", 0, 12));

        start.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        start.setFont(new java.awt.Font("Tahoma", 0, 12));
        start.setText("Start Server");
        start.setToolTipText("start MessageListener & RequestListener services");
        start.setActionCommand("start");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startPressed(evt);
            }
        });
        Server.add(start);

        stop.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        stop.setFont(new java.awt.Font("Tahoma", 0, 12));
        stop.setText("Stop Server");
        stop.setToolTipText("stops MessageListener & RequestListener services");
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pressStop(evt);
            }
        });
        Server.add(stop);

        clients.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        clients.setFont(new java.awt.Font("Tahoma", 0, 12));
        clients.setText("List Clients");
        clients.setToolTipText("lists connected clients");
        clients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pressClients(evt);
            }
        });
        Server.add(clients);

        quitMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        quitMenu.setFont(new java.awt.Font("Tahoma", 0, 12));
        quitMenu.setText("Quit");
        quitMenu.setToolTipText("quit");
        quitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitMenuActionPerformed(evt);
            }
        });
        Server.add(quitMenu);

        menuBar.add(Server);

        sendM.setText("Send Message");
        sendM.setToolTipText("send Message to one person or to everyone");
        sendM.setFont(new java.awt.Font("Tahoma", 0, 12));

        to1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        to1.setFont(new java.awt.Font("Tahoma", 0, 12));
        to1.setText("to Individual");
        to1.setToolTipText("sends message to one person only (as system server)");
        to1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendOne(evt);
            }
        });
        sendM.add(to1);

        toA.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        toA.setFont(new java.awt.Font("Tahoma", 0, 12));
        toA.setText("to All");
        toA.setToolTipText("sends message to everyone (as system server)");
        toA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendAll(evt);
            }
        });
        sendM.add(toA);

        menuBar.add(sendM);

        settings.setText("Settings");
        settings.setFont(new java.awt.Font("Tahoma", 0, 12));

        change.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        change.setFont(new java.awt.Font("Tahoma", 0, 12));
        change.setText("Change Settings");
        change.setToolTipText("don't use this if you don't know what you are doing");
        change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeActionPerformed(evt);
            }
        });
        settings.add(change);

        reset.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        reset.setFont(new java.awt.Font("Tahoma", 0, 12));
        reset.setText("Reset Settings");
        reset.setToolTipText("use this if you spoiled settings :)");
        settings.add(reset);

        menuBar.add(settings);

        about.setText("About");
        about.setToolTipText("About & Help & Docs");
        about.setFont(new java.awt.Font("Tahoma", 0, 12));

        help.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        help.setFont(new java.awt.Font("Tahoma", 0, 12));
        help.setText("Help");
        help.setToolTipText("displays help message");
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pressHelp(evt);
            }
        });
        about.add(help);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        jMenuItem1.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem1.setText("Server Info");
        jMenuItem1.setToolTipText("prints information about server");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverInfo(evt);
            }
        });
        about.add(jMenuItem1);

        threadS.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        threadS.setFont(new java.awt.Font("Tahoma", 0, 12));
        threadS.setText("Active Services");
        threadS.setToolTipText("displays active threads (useful to see if services are still running)");
        threadS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getThreads(evt);
            }
        });
        about.add(threadS);

        aboutDialog.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.CTRL_MASK));
        aboutDialog.setFont(new java.awt.Font("Tahoma", 0, 12));
        aboutDialog.setText("About");
        aboutDialog.setToolTipText("About");
        aboutDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutDialogActionPerformed(evt);
            }
        });
        about.add(aboutDialog);

        menuBar.add(about);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startPressed
        startServer();
    }//GEN-LAST:event_startPressed

    private void pressStop(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pressStop
        stopServer();
    }//GEN-LAST:event_pressStop

    private void pressHelp(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pressHelp
        getHelp();
    }//GEN-LAST:event_pressHelp

    private void pressClients(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pressClients
        getClients();
    }//GEN-LAST:event_pressClients

    private void getThreads(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getThreads
        getThreads();
    }//GEN-LAST:event_getThreads

    private void sendOne(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendOne
        sendOne();
    }//GEN-LAST:event_sendOne

    private void sendAll(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendAll
        sendAll();
    }//GEN-LAST:event_sendAll

    private void aboutDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutDialogActionPerformed
        setLocalhostName(target.getLocalhostName());
        jDialog1.pack();
        jDialog1.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        jDialog1.setVisible(true);
    }//GEN-LAST:event_aboutDialogActionPerformed

    private void quitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitMenuActionPerformed
        send("\n");
        send("message: server will be shut down in at least 60 seconds...");
        stopServer();
        this.dispose();
    }//GEN-LAST:event_quitMenuActionPerformed

    private void serverInfo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverInfo
        send("\n");
        send("serverinfo");
}//GEN-LAST:event_serverInfo

    private void changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeActionPerformed
        if(!target.isServerStarted())
        {
            settingsFrame = new SettingsFrame(target);
            settingsFrame.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        }
        else
            JOptionPane.showMessageDialog( null, "You can't change settings while server is running", "Error!", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_changeActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        try
        {
            Runnable r = new Runnable() 
            {
                public void run() 
                {
                    try
                    {
                        new ServerFrame().setVisible(true);
                    }
                    catch(Exception e)
                    {
                        e.printStackTrace();
                    }
                }
            };
            java.awt.EventQueue.invokeLater(r);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    public void setLocalhostName(String s)
    {
        localhostName = s;
    }
    public String getLocalhostName()
    {
        return localhostName;
    }
    public Object send(Object o)
    {
        target.take(o);
        return o;
    }
    private Object startServer()
    {
        send("\n");
        return send("start");
    }
    private Object stopServer()
    {
        send("\n");
        return send("stop");
    }
    private Object getHelp()
    {
        send("\n");
        return send("help");
    }
    private Object getClients()
    {
        send("\n");
        return send("clients");
    }
    private Object getThreads()
    {
        send("\n");
        return send("getinfo");
    }
    private Object sendOne()
    {
        send("\n");
        return send("send");
    }
    private Object sendAll()
    {
        send("\n");
        return send("sendAll");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Server;
    private javax.swing.JMenu about;
    private javax.swing.JMenuItem aboutDialog;
    private javax.swing.JMenuItem change;
    private javax.swing.JMenuItem clients;
    private javax.swing.JMenuItem help;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem quitMenu;
    private javax.swing.JMenuItem reset;
    private javax.swing.JMenu sendM;
    private javax.swing.JMenu settings;
    private javax.swing.JMenuItem start;
    private javax.swing.JMenuItem stop;
    private javax.swing.JMenuItem threadS;
    private javax.swing.JMenuItem to1;
    private javax.swing.JMenuItem toA;
    // End of variables declaration//GEN-END:variables
    private String localhostName = "localhost";
}
